{"version":3,"sources":["scripts/utils.js","scripts/data/avialiblePlans.js","scripts/main.js"],"names":["generatePricingPlanElement","plan","name","id","monthPrice","features","planContainer","document","createElement","className","title","textContent","priceElement","innerHTML","featureList","forEach","feature","featureItem","featureStatus","isAvialible","featureText","createTextNode","featureName","appendChild","signUpButton","onclick","console","log","createPlanCards","plansArray","plansContainer","getElementById","map","planElement","changePriceByBillingPeriod","billingPeriod","plansArr","querySelectorAll","card","planId","find","currentPlan","querySelector","yearPrice","avialiblePlans","addEventListener","billingPeriodToggle","selectBillingPeriod","checked","classList","remove","add"],"mappings":"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","file":"main.b6632591.js","sourceRoot":"..\\src","sourcesContent":["export const generatePricingPlanElement = (plan) => {\n  const { name, id, monthPrice, features } = plan;\n  const planContainer = document.createElement('div');\n\n  planContainer.className = 'card';\n  planContainer.id = id;\n\n  const title = document.createElement('h2');\n\n  title.className = 'card__title';\n  title.textContent = name;\n\n  const priceElement = document.createElement('p');\n\n  priceElement.className = 'card__price';\n  priceElement.innerHTML = `$${monthPrice}<span>/month</span>`;\n\n  const featureList = document.createElement('ul');\n\n  featureList.className = 'card__features';\n\n  features.forEach(feature => {\n    const featureItem = document.createElement('li');\n\n    featureItem.className = 'card__feature-item';\n\n    const featureStatus = document.createElement('span');\n\n    featureStatus.className = `card__feature-status\n      ${feature.isAvialible ? 'checkmark' : 'cross'}`;\n\n    const featureText = document.createTextNode(feature.featureName);\n\n    featureItem.appendChild(featureStatus);\n    featureItem.appendChild(featureText);\n\n    featureList.appendChild(featureItem);\n  });\n\n  const signUpButton = document.createElement('div');\n\n  signUpButton.className = 'button';\n  signUpButton.textContent = 'Sign Up';\n\n  signUpButton.onclick = () => {\n    // eslint-disable-next-line no-console\n    console.log('Selected plan info: ', plan);\n\n    // eslint-disable-next-line no-console\n    console.log('Selected period: month');\n  };\n\n  planContainer.appendChild(title);\n  planContainer.appendChild(priceElement);\n  planContainer.appendChild(featureList);\n  planContainer.appendChild(signUpButton);\n\n  return planContainer;\n};\n\nexport const createPlanCards = (plansArray) => {\n  const plansContainer = document.getElementById('plansContainer');\n\n  plansArray.map(plan => {\n    const planElement = generatePricingPlanElement(plan);\n\n    plansContainer.appendChild(planElement);\n  });\n};\n\nexport const changePriceByBillingPeriod = (billingPeriod, plansArr) => {\n  const cards = document.querySelectorAll('.card');\n\n  cards.forEach(card => {\n    const planId = card.id;\n\n    if (planId && plansArr.find(plan => plan.id === planId)) {\n      const currentPlan = plansArr.find(plan => plan.id === planId);\n\n      const cardPriceEl = card.querySelector('.card__price');\n\n      cardPriceEl.innerHTML = `${billingPeriod === 'month'\n        ? `$${currentPlan.monthPrice}<span>/month</span>`\n        : `$${currentPlan.yearPrice}<span>/year</span>`\n      }`;\n\n      const signUpButton = card.querySelector('.button');\n\n      signUpButton.onclick = () => {\n        // eslint-disable-next-line no-console\n        console.log('Selected plan info: ', currentPlan);\n\n        // eslint-disable-next-line no-console\n        console.log(`Selected period: ${billingPeriod}`);\n      };\n    }\n  });\n};\n","export const avialiblePlans = [\n  {\n    id: 'dummy-test-id-0',\n    name: 'Basic',\n    monthPrice: 1.99,\n    yearPrice: 11.99,\n    features: [\n      {\n        featureName: 'Feature 1',\n        isAvialible: true,\n      },\n      {\n        featureName: 'Feature 2',\n        isAvialible: false,\n      },\n      {\n        featureName: 'Feature 3',\n        isAvialible: false,\n      },\n    ],\n  }, {\n    id: 'dummy-test-id-1',\n    name: 'Standart',\n    monthPrice: 5.99,\n    yearPrice: 55.99,\n    features: [\n      {\n        featureName: 'Feature 1',\n        isAvialible: true,\n      },\n      {\n        featureName: 'Feature 2',\n        isAvialible: true,\n      },\n      {\n        featureName: 'Feature 3',\n        isAvialible: false,\n      },\n    ],\n  }, {\n    id: 'dummy-test-id-2',\n    name: 'Premium',\n    monthPrice: 9.99,\n    yearPrice: 99.99,\n    features: [\n      {\n        featureName: 'Feature 1',\n        isAvialible: true,\n      },\n      {\n        featureName: 'Feature 2',\n        isAvialible: true,\n      },\n      {\n        featureName: 'Feature 3',\n        isAvialible: true,\n      },\n    ],\n  },\n];\n","import {\n  createPlanCards,\n  changePriceByBillingPeriod,\n} from './utils';\n\nimport { avialiblePlans } from './data/avialiblePlans';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  createPlanCards(avialiblePlans);\n\n  const billingPeriodToggle = document.getElementById('billingToggle');\n\n  billingPeriodToggle.addEventListener('change', () => {\n    const selectBillingPeriod = document.getElementById('selectBillingPeriod');\n\n    if (billingPeriodToggle.checked) {\n      selectBillingPeriod.classList.remove(\n        'select-plan__billing-selected-period--monthly'\n      );\n\n      selectBillingPeriod.classList.add(\n        'select-plan__billing-selected-period--yearly'\n      );\n\n      changePriceByBillingPeriod('year', avialiblePlans);\n    } else {\n      selectBillingPeriod.classList.remove(\n        'select-plan__billing-selected-period--yearly'\n      );\n\n      selectBillingPeriod.classList.add(\n        'select-plan__billing-selected-period--monthly'\n      );\n\n      changePriceByBillingPeriod('month', avialiblePlans);\n    }\n  });\n});\n"]}